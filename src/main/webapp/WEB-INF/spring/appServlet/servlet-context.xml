<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:view-controller path="/" view-name="index"/>
	<annotation-driven conversion-service="conversionService"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="20971520"/> <!-- 20MB -->
		<beans:property name="maxInMemorySize" value="20971520"/> <!-- 20MB -->
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/bancoperfis?useLegacyDatetimeCode=false&amp;serverTimezone=UCT"/>
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>
	
	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>br.unb.itrac.model.ScaleOption</beans:value>
				<beans:value>br.unb.itrac.model.CompetencyScale</beans:value>
				<beans:value>br.unb.itrac.model.CompetencyCategory</beans:value>
				<beans:value>br.unb.itrac.model.Competency</beans:value>
				<beans:value>br.unb.itrac.model.Collaborator</beans:value>
				<beans:value>br.unb.itrac.model.Document</beans:value>
				<beans:value>br.unb.itrac.model.Contract</beans:value>
				<beans:value>br.unb.itrac.model.Profile</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:set>
				<beans:bean class="br.unb.itrac.converter.ScaleOptionToStringConverter"/>
			</beans:set>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="scaleOptionDAO" class="br.unb.itrac.dao.ScaleOptionDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="scaleOptionService" class="br.unb.itrac.service.ScaleOptionServiceImpl">
		<beans:property name="scaleOptionDAO" ref="scaleOptionDAO"/>
	</beans:bean>
	
	<beans:bean id="competencyScaleDAO" class="br.unb.itrac.dao.CompetencyScaleDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="competencyScaleService" class="br.unb.itrac.service.CompetencyScaleServiceImpl">
		<beans:property name="competencyScaleDAO" ref="competencyScaleDAO"/>
	</beans:bean>
	
	<beans:bean id="competencyCategoryDAO" class="br.unb.itrac.dao.CompetencyCategoryDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="competencyCategoryService" class="br.unb.itrac.service.CompetencyCategoryServiceImpl">
		<beans:property name="competencyCategoryDAO" ref="competencyCategoryDAO"/>
	</beans:bean>
	
	<beans:bean id="competencyDAO" class="br.unb.itrac.dao.CompetencyDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="competencyService" class="br.unb.itrac.service.CompetencyServiceImpl">
		<beans:property name="competencyDAO" ref="competencyDAO"/>
	</beans:bean>
	
	<beans:bean id="collaboratorDAO" class="br.unb.itrac.dao.CollaboratorDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="collaboratorService" class="br.unb.itrac.service.CollaboratorServiceImpl">
		<beans:property name="collaboratorDAO" ref="collaboratorDAO"/>
	</beans:bean>
	
	<beans:bean id="documentDAO" class="br.unb.itrac.dao.DocumentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="documentService" class="br.unb.itrac.service.DocumentServiceImpl">
		<beans:property name="documentDAO" ref="documentDAO"/>
	</beans:bean>
	
	<beans:bean id="contractDAO" class="br.unb.itrac.dao.ContractDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="contractService" class="br.unb.itrac.service.ContractServiceImpl">
		<beans:property name="contractDAO" ref="contractDAO"/>
	</beans:bean>
	
	<beans:bean id="profileDAO" class="br.unb.itrac.dao.ProfileDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="profileService" class="br.unb.itrac.service.ProfileServiceImpl">
		<beans:property name="profileDAO" ref="profileDAO"/>
	</beans:bean>
	
	<context:component-scan base-package="br.unb.itrac" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
</beans:beans>
